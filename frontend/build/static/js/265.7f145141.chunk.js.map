{"version":3,"file":"static/js/265.7f145141.chunk.js","mappings":"uMAWA,MAqRA,EAvPuBA,IAAkB,IAAjB,QAAEC,GAASD,EAC/B,MAAM,WAAEE,EAAU,YAAEC,EAAW,eAAEC,EAAc,WAAEC,EAAU,SAAEC,IAAaC,EAAAA,EAAAA,OACnEC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CACrCG,WAAY,KACZC,aAAc,GACdC,KAAM,GACNC,SAAU,GACVC,OAAQ,MAELC,EAAkBC,IAAuBT,EAAAA,EAAAA,UAAS,OAClDU,EAAcC,IAAmBX,EAAAA,EAAAA,WAAS,GAC3CY,GAAiBC,EAAAA,EAAAA,QAAO,OAG9BC,EAAAA,EAAAA,YAAU,KACN,GAAIlB,GAAYA,EAASmB,QAAU,EAAG,CAClC,MAAMC,EA/CQpB,IACjBA,GAAgC,IAApBA,EAASmB,OAKRE,KAAKC,OAAOtB,EAASuB,KAAIC,GAET,kBAAvBA,EAAQjB,WACTkB,SAASD,EAAQjB,WAAY,IAC7BiB,EAAQjB,cAGC,EAXR,EA6CYmB,CAAiB1B,GAChCM,GAAYqB,IAAS,IACdA,EACHpB,WAAYa,KAEpB,IACD,CAACpB,KAEJkB,EAAAA,EAAAA,YAAU,KAEFF,EAAeY,SACfZ,EAAeY,QAAQC,OAC3B,GACD,IAEH,MAAMC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAI1B,GAHAC,QAAQC,IAAI,cAAcJ,iBAAoBC,mBAAuBA,MAGxD,aAATD,EAAqB,CACrBG,QAAQC,IAAI,qBAAsBH,GAGlC,MAAMI,EAAYC,MAAML,GAA+BA,EAAtBR,SAASQ,EAAO,IACjDE,QAAQC,IAAI,6BAA8BC,EAAU,gBAAiBA,EAAU,KAE/E/B,EAAY,IACLD,EACH,CAAC2B,GAAOK,GAEhB,MACI/B,EAAY,IACLD,EACH,CAAC2B,GAAOC,GAEhB,EA4EJ,OACIM,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAOC,KAAMC,SA1EbC,UACjBb,EAAEc,iBACF9B,GAAgB,GAEhB,IAEI,IAAKV,EAASE,aAAeF,EAASG,eAAiBH,EAASI,OAASJ,EAASK,UAAgC,KAApBL,EAASM,OAGnG,OAFAmC,EAAAA,EAAAA,IAAU,gCACV/B,GAAgB,GAKpB,MAAMgC,EAAa,IACZ1C,EACHE,WAAYkB,SAASpB,EAASE,WAAY,WAGxBX,EAAWmD,IAE7BpD,GAER,CAAE,MAAOqD,GACLb,QAAQa,MAAM,yBAA0BA,IACxCF,EAAAA,EAAAA,IAAUE,EAAMC,SAAW,wBAC/B,CAAC,QACGlC,GAAgB,EACpB,GA+CqDmC,SAAA,EACjDC,EAAAA,EAAAA,KAAA,MAAIX,UAAWC,EAAAA,EAAOW,QAAQF,SAAC,qBAC/BX,EAAAA,EAAAA,MAAA,SAAAW,SAAA,CAAO,eAEHC,EAAAA,EAAAA,KAAA,SACIE,KAAK,OACLrB,KAAK,aACLC,MAAO5B,EAASE,WAAa,IAlJxB+C,EAkJ4CjD,EAASE,WAjJnE+C,EAAGC,WAAWC,SAAS,EAAG,OAiJyD,GAC1EC,UAAQ,EACRjB,UAAWC,EAAAA,EAAOiB,kBAEtBP,EAAAA,EAAAA,KAAA,SAAOX,UAAWC,EAAAA,EAAOkB,UAAUT,SAAC,qCAExCX,EAAAA,EAAAA,MAAA,SAAAW,SAAA,CAAO,iBAEHC,EAAAA,EAAAA,KAAA,SACIE,KAAK,OACLrB,KAAK,eACLC,MAAO5B,EAASG,aAChBoD,SAAU9B,EACV+B,IAAK7C,EACL8C,UAAQ,QAGhBvB,EAAAA,EAAAA,MAAA,SAAAW,SAAA,CAAO,SAEHC,EAAAA,EAAAA,KAAA,SACIE,KAAK,OACLrB,KAAK,OACLC,MAAO5B,EAASI,KAChBmD,SAAU9B,EACVgC,UAAQ,QAGhBvB,EAAAA,EAAAA,MAAA,SAAAW,SAAA,CAAO,aAEHX,EAAAA,EAAAA,MAAA,UACIP,KAAK,WACLC,MAAO5B,EAASK,SAChBkD,SAAU9B,EACVgC,UAAQ,EAAAZ,SAAA,EAERC,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,GAAEiB,SAAC,sBAChBnD,EAAWwB,KAAI,CAACb,EAAUqD,KACvBZ,EAAAA,EAAAA,KAAA,UAAoBlB,MAA2B,kBAAbvB,EAAwBA,EAAS4C,GAAK5C,EAASwC,SACxD,kBAAbxC,EAAwBA,EAASsB,KAAOtB,GADvCqD,YAMzBxB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOuB,gBAAgBd,SAAA,EACnCX,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOwB,iBAAiBf,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SACIE,KAAK,OACLa,YAAY,oBACZjC,MAAO/B,EACP0D,SAAW7B,GAAM5B,EAAe4B,EAAEG,OAAOD,UAE7CkB,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACHd,KAAK,SACLe,QAxGMxB,UACtB,GAAK1C,EAAYmE,OAKjB,GAAItE,EAAWuE,SAASpE,EAAYmE,SAChCvB,EAAAA,EAAAA,IAAU,gCAId,UACUjD,EAAYK,GAClBC,EAAe,GACnB,CAAE,MAAO6C,GACLb,QAAQa,MAAM,yBAA0BA,IACxCF,EAAAA,EAAAA,IAAUE,EAAMC,SAAW,yBAC/B,MAfIH,EAAAA,EAAAA,IAAU,gCAed,EAwFgByB,QAAQ,UACRC,KAAK,cAAatB,SACrB,qBAILX,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOgC,oBAAoBvB,SAAA,EACvCX,EAAAA,EAAAA,MAAA,UACIN,MAAOrB,GAAoB,GAC3BgD,SAAW7B,GAAMlB,EAAoBkB,EAAEG,OAAOD,OAAOiB,SAAA,EAErDC,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,GAAEiB,SAAC,gCAChBnD,EAAWwB,KAAI,CAACb,EAAUqD,KACvBZ,EAAAA,EAAAA,KAAA,UAAoBlB,MAA2B,kBAAbvB,EAAwBA,EAAS4C,GAAK5C,EAASwC,SACxD,kBAAbxC,EAAwBA,EAASsB,KAAOtB,GADvCqD,SAKrBZ,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACHd,KAAK,SACLe,QAzGSxB,UACzB,GAAKhC,EAKL,UACUd,EAAec,GACrBC,EAAoB,MAGhBR,EAASK,WAAaE,GACtBN,EAAY,IACLD,EACHK,SAAU,IAGtB,CAAE,MAAOsC,GACLb,QAAQa,MAAM,2BAA4BA,IAC1CF,EAAAA,EAAAA,IAAUE,EAAMC,SAAW,4BAC/B,MAlBIH,EAAAA,EAAAA,IAAU,qCAkBd,EAsFgByB,QAAQ,SACRC,KAAK,mBAAkBtB,SAC1B,2BAKTX,EAAAA,EAAAA,MAAA,SAAAW,SAAA,CAAO,WAEHC,EAAAA,EAAAA,KAAA,SACIE,KAAK,SACLrB,KAAK,SACLC,MAAO5B,EAASM,OAChBiD,SAAU9B,EACVgC,UAAQ,QAGhBvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOiC,YAAYxB,SAAA,EAC/BC,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CAACd,KAAK,SAASkB,QAAQ,UAAUC,KAAK,cAAcG,SAAU7D,EAAaoC,SAC7EpC,EAAe,YAAc,iBAElCqC,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACHd,KAAK,SACLe,QAASzE,EACT4E,QAAQ,YACRI,SAAU7D,EACV0D,KAAK,eAActB,SACtB,iBAxPQI,KA4PV,C,iCC3Rf,SAAgB,KAAO,0BAA0B,QAAU,6BAA6B,eAAiB,oCAAoC,UAAY,+BAA+B,iBAAmB,sCAAsC,oBAAsB,yCAAyC,gBAAkB,qCAAqC,YAAc,iCAAiC,eAAiB,oCAAoC,iBAAmB,sCAAsC,aAAe,kCAAkC,aAAe,kCAAkC,aAAe,kCAAkC,aAAe,kCAAkC,eAAiB,oCAAoC,kBAAoB,uCAAuC,aAAe,kCAAkC,kBAAoB,uCAAuC,oBAAsB,yCAAyC,SAAW,8BAA8B,YAAc,iCAAiC,aAAe,kCAAkC,aAAe,kCAAkC,iBAAmB,sCAAsC,kBAAoB,uCAAuC,oBAAsB,yC","sources":["components/ProductTable/ProductForm/AddProductForm.js","webpack://inventory-app/./src/components/ProductTable/ProductForm/ProductForm.module.css?fd4b"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./ProductForm.module.css\";\nimport Button from \"../../common/Button/Button\";\nimport { useAppContext } from \"../../../context/AppContext\";\nimport { showError } from \"../../../utils/utils\";\n\n/**\n * Generates the next sequential product ID\n * @param {Array} products - Array of existing products\n * @returns {number} Next available product ID\n */\nconst getNextProductId = (products) => {\n    if (!products || products.length === 0) {\n        return 1; // Start with 1 if no products exist\n    }\n    \n    // Find the current highest product_id\n    const highestId = Math.max(...products.map(product => \n        // Ensure we're comparing numbers\n        typeof product.product_id === 'string' \n            ? parseInt(product.product_id, 10) \n            : product.product_id\n    ));\n    \n    return highestId + 1;\n};\n\n/**\n * Formats product ID with leading zeros for display\n * @param {number} id - Product ID number\n * @returns {string} Formatted product ID with leading zeros (e.g., 0001)\n */\nconst formatProductId = (id) => {\n    return id.toString().padStart(4, '0');\n};\n\n/**\n * AddProductForm component for adding new products\n * @param {Object} props - Component props\n * @param {Function} props.onClose - Function to close the form\n */\nconst AddProductForm = ({ onClose }) => {\n    const { addProduct, addCategory, deleteCategory, categories, products } = useAppContext();\n    const [newCategory, setNewCategory] = useState(\"\");\n    const [formData, setFormData] = useState({\n        product_id: null, // Will be set in useEffect after products are available\n        product_name: \"\",\n        unit: \"\",\n        category: \"\",\n        amount: \"\"\n    });\n    const [categoryToDelete, setCategoryToDelete] = useState(null);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const productNameRef = useRef(null);\n\n    // Set initial product ID when products load\n    useEffect(() => {\n        if (products && products.length >= 0) {\n            const nextId = getNextProductId(products);\n            setFormData(prevState => ({\n                ...prevState,\n                product_id: nextId\n            }));\n        }\n    }, [products]);\n\n    useEffect(() => {\n        // Focus on product_name field since product_id is auto-generated\n        if (productNameRef.current) {\n            productNameRef.current.focus();\n        }\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        console.log(`Form field ${name} changed to: ${value} (type: ${typeof value})`);\n        \n        // Add special handling for category to ensure consistency\n        if (name === 'category') {\n            console.log('Category selected:', value);\n            \n            // If value is numeric string, convert to number to be consistent with database\n            const newValue = !isNaN(value) ? parseInt(value, 10) : value;\n            console.log('Normalized category value:', newValue, '(type:', typeof newValue, ')');\n            \n            setFormData({\n                ...formData,\n                [name]: newValue\n            });\n        } else {\n            setFormData({\n                ...formData,\n                [name]: value\n            });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n\n        try {\n            // Validate form data\n            if (!formData.product_id || !formData.product_name || !formData.unit || !formData.category || formData.amount === \"\") {\n                showError(\"All fields are required\");\n                setIsSubmitting(false);\n                return;\n            }\n\n            // Ensure product_id is numeric\n            const submitData = {\n                ...formData,\n                product_id: parseInt(formData.product_id, 10)\n            };\n\n            const success = await addProduct(submitData);\n            if (success) {\n                onClose();\n            }\n        } catch (error) {\n            console.error(\"Error submitting form:\", error);\n            showError(error.message || \"Failed to add product\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const handleAddCategory = async () => {\n        if (!newCategory.trim()) {\n            showError(\"Category name cannot be empty\");\n            return;\n        }\n\n        if (categories.includes(newCategory.trim())) {\n            showError(\"Category already exists\");\n            return;\n        }\n\n        try {\n            await addCategory(newCategory);\n            setNewCategory(\"\");\n        } catch (error) {\n            console.error(\"Error adding category:\", error);\n            showError(error.message || \"Failed to add category\");\n        }\n    };\n\n    const handleDeleteCategory = async () => {\n        if (!categoryToDelete) {\n            showError(\"Please select a category to delete\");\n            return;\n        }\n\n        try {\n            await deleteCategory(categoryToDelete);\n            setCategoryToDelete(null);\n            \n            // If deleted category was selected in the form, reset it\n            if (formData.category === categoryToDelete) {\n                setFormData({\n                    ...formData,\n                    category: \"\"\n                });\n            }\n        } catch (error) {\n            console.error(\"Error deleting category:\", error);\n            showError(error.message || \"Failed to delete category\");\n        }\n    };\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <h2 className={styles.heading}>Product Manager</h2>\n            <label>\n                Product ID:\n                <input\n                    type=\"text\"\n                    name=\"product_id\"\n                    value={formData.product_id ? `#${formatProductId(formData.product_id)}` : ''}\n                    readOnly\n                    className={styles.generatedField}\n                />\n                <small className={styles.fieldNote}>Auto-generated sequential ID</small>\n            </label>\n            <label>\n                Product Name:\n                <input\n                    type=\"text\"\n                    name=\"product_name\"\n                    value={formData.product_name}\n                    onChange={handleChange}\n                    ref={productNameRef}\n                    required\n                />\n            </label>\n            <label>\n                Unit:\n                <input\n                    type=\"text\"\n                    name=\"unit\"\n                    value={formData.unit}\n                    onChange={handleChange}\n                    required\n                />\n            </label>\n            <label>\n                Category:\n                <select\n                    name=\"category\"\n                    value={formData.category}\n                    onChange={handleChange}\n                    required\n                >\n                    <option value=\"\">Select a category</option>\n                    {categories.map((category, index) => (\n                        <option key={index} value={typeof category === 'object' ? category.id : category}>\n                            {typeof category === 'object' ? category.name : category}\n                        </option>\n                    ))}\n                </select>\n            </label>\n            <div className={styles.categorySection}>\n                <div className={styles.newCategoryInput}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"New category name\"\n                        value={newCategory}\n                        onChange={(e) => setNewCategory(e.target.value)}\n                    />\n                    <Button\n                        type=\"button\"\n                        onClick={handleAddCategory}\n                        variant=\"success\"\n                        icon=\"fas fa-plus\"\n                    >\n                        Add Category\n                    </Button>\n                </div>\n                <div className={styles.deleteCategoryInput}>\n                    <select\n                        value={categoryToDelete || \"\"}\n                        onChange={(e) => setCategoryToDelete(e.target.value)}\n                    >\n                        <option value=\"\">Select a category to delete</option>\n                        {categories.map((category, index) => (\n                            <option key={index} value={typeof category === 'object' ? category.id : category}>\n                                {typeof category === 'object' ? category.name : category}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        type=\"button\"\n                        onClick={handleDeleteCategory}\n                        variant=\"delete\"\n                        icon=\"fas fa-trash-alt\"\n                    >\n                        Delete Category\n                    </Button>\n                </div>\n            </div>\n            <label>\n                Amount:\n                <input\n                    type=\"number\"\n                    name=\"amount\"\n                    value={formData.amount}\n                    onChange={handleChange}\n                    required\n                />\n            </label>\n            <div className={styles.buttonGroup}>\n                <Button type=\"submit\" variant=\"success\" icon=\"fas fa-save\" disabled={isSubmitting}>\n                    {isSubmitting ? \"Adding...\" : \"Add Product\"}\n                </Button>\n                <Button\n                    type=\"button\"\n                    onClick={onClose}\n                    variant=\"secondary\"\n                    disabled={isSubmitting}\n                    icon=\"fas fa-times\"\n                >\n                    Cancel\n                </Button>\n            </div>\n        </form>\n    );\n};\n\nexport default AddProductForm;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProductForm_form__2eyCa\",\"heading\":\"ProductForm_heading__NA0ph\",\"generatedField\":\"ProductForm_generatedField__9VTzt\",\"fieldNote\":\"ProductForm_fieldNote__1MS8-\",\"newCategoryInput\":\"ProductForm_newCategoryInput__lIdil\",\"deleteCategoryInput\":\"ProductForm_deleteCategoryInput__IIZiA\",\"categorySection\":\"ProductForm_categorySection__yH2V+\",\"buttonGroup\":\"ProductForm_buttonGroup__Q+LmU\",\"customDropdown\":\"ProductForm_customDropdown__nFLPj\",\"selectedCategory\":\"ProductForm_selectedCategory__LPaC+\",\"dropdownMenu\":\"ProductForm_dropdownMenu__VpjEr\",\"dropdownItem\":\"ProductForm_dropdownItem__VkJb6\",\"categoryName\":\"ProductForm_categoryName__ohrn8\",\"deleteButton\":\"ProductForm_deleteButton__L7lFs\",\"addNewCategory\":\"ProductForm_addNewCategory__7EpW5\",\"addCategoryButton\":\"ProductForm_addCategoryButton__yE3NN\",\"noCategories\":\"ProductForm_noCategories__D7dwo\",\"categoryContainer\":\"ProductForm_categoryContainer__pTazC\",\"categoryEditSection\":\"ProductForm_categoryEditSection__Rpx2O\",\"helpText\":\"ProductForm_helpText__fBG5t\",\"warningText\":\"ProductForm_warningText__P8DAq\",\"categoryList\":\"ProductForm_categoryList__T7+n8\",\"categoryItem\":\"ProductForm_categoryItem__7x0wS\",\"categoryEditForm\":\"ProductForm_categoryEditForm__Wkt+4\",\"editCategoryInput\":\"ProductForm_editCategoryInput__Vm+En\",\"categoryEditButtons\":\"ProductForm_categoryEditButtons__+cDWB\"};"],"names":["_ref","onClose","addProduct","addCategory","deleteCategory","categories","products","useAppContext","newCategory","setNewCategory","useState","formData","setFormData","product_id","product_name","unit","category","amount","categoryToDelete","setCategoryToDelete","isSubmitting","setIsSubmitting","productNameRef","useRef","useEffect","length","nextId","Math","max","map","product","parseInt","getNextProductId","prevState","current","focus","handleChange","e","name","value","target","console","log","newValue","isNaN","_jsxs","className","styles","form","onSubmit","async","preventDefault","showError","submitData","error","message","children","_jsx","heading","type","id","toString","padStart","readOnly","generatedField","fieldNote","onChange","ref","required","index","categorySection","newCategoryInput","placeholder","Button","onClick","trim","includes","variant","icon","deleteCategoryInput","buttonGroup","disabled"],"sourceRoot":""}